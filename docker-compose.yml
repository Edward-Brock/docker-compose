services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    volumes:
      - $PWD/nginx/nginx.conf:/etc/nginx/nginx.conf
      - $PWD/nginx/conf.d:/etc/nginx/conf.d
      - $PWD/nginx/ssl:/etc/nginx/ssl
      - $PWD/nginx/html:/usr/share/nginx/html
      - $PWD/nginx/log:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=Asia/Shanghai
    labels:
      - sh.acme.autoload.domain=${CAME_SH_AUTOLOAD_DOMAIN}

  mysql:
    image: mysql
    container_name: mysql
    restart: always
    volumes:
      - $PWD/mysql/conf.d:/etc/mysql/conf.d
      - $PWD/mysql/data:/var/lib/mysql
      - $PWD/mysql/log:/var/log/mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=Asia/Shanghai
    command:
      - --lower_case_table_names=1
      - --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis/d–∞ta:/data
      - $PWD/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  wordpress:
    image: wordpress:latest
    container_name: wordpress
    restart: always
    ports:
      - 8080:80
    volumes:
      - $PWD/wordpress:/var/www/html
    environment:
      - WORDPRESS_DB_NAME=wordpress
      - WORDPRESS_DB_HOST=mysql
      - WORDPRESS_DB_USER=wp_user
      - WORDPRESS_DB_PASSWORD=!5@tN3@!76
    depends_on:
      - nginx
      - mysql

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "3307:80"
    environment:
      - PMA_HOST=mysql
      - PMA_POST=3306
      - TZ=Asia/Shanghai
    depends_on:
      - mysql

  vaultwarden:
    image: vaultwarden/server
    container_name: vaultwarden
    restart: always
    ports:
    - "8090:80"
    volumes:
    - $PWD/vaultwarden:/data
    environment:
    - DATABASE_URL=mysql://${VAULTWARDEN_DATABASE_USER}:${VAULTWARDEN_DATABASE_PASSWORD}@mysql/vaultwarden
    - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}
    - RUST_BACKTRACE=1
    depends_on:
      - mysql

  acme.sh:
    image: neilpang/acme.sh
    container_name: acme.sh
    restart: always
    volumes:
      - $PWD/acme.sh:/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DP_Id=${CAME_SH_DNSPOD_ID}
      - DP_Key=${CAME_SH_DNSPOD_KEY}
      - DEPLOY_DOCKER_CONTAINER_LABEL=sh.acme.autoload.domain=${CAME_SH_AUTOLOAD_DOMAIN}
      - DEPLOY_DOCKER_CONTAINER_KEY_FILE="/etc/nginx/ssl/${CAME_SH_AUTOLOAD_DOMAIN}/${CAME_SH_AUTOLOAD_DOMAIN}.key"
      - DEPLOY_DOCKER_CONTAINER_CERT_FILE="/etc/nginx/ssl/${CAME_SH_AUTOLOAD_DOMAIN}/${CAME_SH_AUTOLOAD_DOMAIN}.cer"
      - DEPLOY_DOCKER_CONTAINER_CA_FILE="/etc/nginx/ssl/${CAME_SH_AUTOLOAD_DOMAIN}/ca.cer"
      - DEPLOY_DOCKER_CONTAINER_FULLCHAIN_FILE="/etc/nginx/ssl/${CAME_SH_AUTOLOAD_DOMAIN}/fullchain.cer"
      - DEPLOY_DOCKER_CONTAINER_RELOAD_CMD="docker compose exec nginx nginx -s reload"
    command: daemon

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Asia/Shanghai
    command:
      - --cleanup=true

  minecraft:
    image: itzg/minecraft-server
    container_name: minecraft-server
    restart: always
    tty: true
    stdin_open: true
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
      MAX_PLAYERS: "8"
      TZ: "Asia/Shanghai"
      DIFFICULTY: "2"
      ENABLE_COMMAND_BLOCK: "true"
    volumes:
      - $PWD/minecraft:/data

  beszel:
    image: henrygd/beszel
    container_name: beszel
    restart: always
    ports:
      - 8090:8090
    volumes:
      - $PWD/beszel:/beszel_data

  beszel-agent:
    image: henrygd/beszel-agent
    container_name: beszel-agent
    restart: always
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      PORT: 45876
      KEY: 'KEY'
